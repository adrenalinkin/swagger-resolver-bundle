{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Customer API",
        "description": "Example API for work with customer"
    },
    "host": "localhost",
    "basePath": "/api",
    "schemes": ["https"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "paths": {
        "/customers": {
            "get": {
                "description": "Returns all customers",
                "parameters": [
                    {
                        "name": "x-auth-token",
                        "in": "header",
                        "description": "Alternative token for the authorization",
                        "required": true,
                        "type": "string",
                        "pattern": "^\\w{36}$"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Items count for the single page",
                        "required": false,
                        "type": "integer",
                        "enum": [100, 500, 1000],
                        "default": 100
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of customers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerFull"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create new customer",
                "parameters": [
                    {
                        "name": "x-auth-token",
                        "in": "header",
                        "description": "Alternative token for the authorization",
                        "required": true,
                        "type": "string",
                        "pattern": "^\\w{36}$"
                    },
                    {
                        "name": "roles",
                        "in": "query",
                        "description": "Deprecated - Old way to set user roles",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "uniqueItems": true,
                        "minItems": 1,
                        "maxItems": 3,
                        "enum": [100, 500, 1000],
                        "items": {
                            "type": "string",
                            "enum": ["guest", "user", "admin"]
                        }
                    },
                    {
                        "name": "customer",
                        "in": "body",
                        "description": "Customer to add to the system",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerNew"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "New customer ID",
                        "schema": {
                            "$ref": "#/definitions/ResponseCreated"
                        }
                    }
                }
            }
        },
        "/customers/{userId}": {
            "get": {
                "description": "Return customer by ID",
                "parameters": [
                    {
                        "name": "x-auth-token",
                        "in": "header",
                        "description": "Alternative token for the authorization",
                        "required": true,
                        "type": "string",
                        "pattern": "^\\w{36}$"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Customer ID to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "exclusiveMinimum": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer data",
                        "schema": {
                            "$ref": "#/definitions/CustomerFull"
                        }
                    }
                }
            },
            "put": {
                "description": "Update customer",
                "parameters": [
                    {
                        "name": "x-auth-token",
                        "in": "header",
                        "description": "Alternative token for the authorization",
                        "required": true,
                        "type": "string",
                        "pattern": "^\\w{36}$"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Customer ID to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "exclusiveMinimum": true
                    },
                    {
                        "name": "roles",
                        "in": "query",
                        "description": "Deprecated - Old way to set user roles",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "uniqueItems": true,
                        "minItems": 1,
                        "maxItems": 3,
                        "enum": [100, 500, 1000],
                        "items": {
                            "type": "string",
                            "enum": ["guest", "user", "admin"]
                        }
                    },
                    {
                        "name": "customer",
                        "in": "body",
                        "description": "Customer update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomerNew"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response when updated successfully"
                    }
                }
            },
            "patch": {
                "description": "Partial customer update in formData style",
                "deprecated": true,
                "consumes": ["application/x-www-form-urlencoded"],
                "parameters": [
                    {
                        "name": "x-auth-token",
                        "in": "header",
                        "description": "Alternative token for the authorization",
                        "required": true,
                        "type": "string",
                        "pattern": "^\\w{36}$"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Customer ID to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "exclusiveMinimum": true
                    },
                    {
                        "name": "roles",
                        "in": "query",
                        "description": "Deprecated - Old way to set user roles",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "uniqueItems": true,
                        "minItems": 1,
                        "maxItems": 3,
                        "enum": [100, 500, 1000],
                        "items": {
                            "type": "string",
                            "enum": ["guest", "user", "admin"]
                        }
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name of the Customer",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "exclusiveMinimum": true
                    },
                    {
                        "name": "discount",
                        "in": "formData",
                        "description": "Size of the Customer's discount in percent",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "multipleOf": 10,
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "maximum": 100,
                        "exclusiveMaximum": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response when updated successfully"
                    }
                }
            },
            "delete": {
                "description": "Delete customer from the system",
                "parameters": [
                    {
                        "name": "x-auth-token",
                        "in": "header",
                        "description": "Alternative token for the authorization",
                        "required": true,
                        "type": "string",
                        "pattern": "^\\w{36}$"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Customer ID to delete",
                        "required": true,
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response when removed successfully"
                    }
                }
            }
        },
        "/customers/{userId}/password": {
            "post": {
                "description": "Create new password when not even set",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "x-auth-token",
                        "in": "header",
                        "description": "Alternative token for the authorization",
                        "required": true,
                        "type": "string",
                        "pattern": "^\\w{36}$"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Customer ID to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "exclusiveMinimum": true
                    },
                    {
                        "name": "password",
                        "in": "body",
                        "description": "New password",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 30
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response when updated successfully"
                    }
                }
            },
            "put": {
                "description": "Change password",
                "parameters": [
                    {
                        "name": "x-auth-token",
                        "in": "header",
                        "description": "Alternative token for the authorization",
                        "required": true,
                        "type": "string",
                        "pattern": "^\\w{36}$"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Customer ID to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "exclusiveMinimum": true
                    },
                    {
                        "name": "password-reset",
                        "in": "body",
                        "description": "body to change password",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": ["oldPassword", "newPassword"],
                            "properties": {
                                "oldPassword": {
                                    "type": "string",
                                    "maxLength": 30
                                },
                                "newPassword": {
                                    "type": "string",
                                    "maxLength": 30
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response when updated successfully"
                    }
                }
            }
        }
    },
    "definitions": {
        "ResponseCreated": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0,
                    "exclusiveMinimum": true
                }
            }
        },
        "CustomerNew": {
            "type": "object",
            "required": ["name", "roles", "email", "password"],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50
                },
                "secondName": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["guest", "user", "admin"],
                        "uniqueItems": true,
                        "minProperties": 1,
                        "maxProperties": 2
                    }
                },
                "password": {
                    "type": "string",
                    "maxLength": 30
                },
                "email": {
                    "type": "string",
                    "pattern": "^[0-9a-z]+\\@crud\\.com$"
                },
                "birthday": {
                    "type": "string",
                    "format": "date"
                },
                "happyHour": {
                    "type": "string",
                    "format": "time",
                    "default": "09:00"
                },
                "discount": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "multipleOf": 10,
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 100,
                    "exclusiveMaximum": true
                }
            }
        },
        "CustomerFull": {
            "type": "object",
            "required": ["id", "name", "roles", "email", "registeredAt"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0,
                    "exclusiveMinimum": true
                },
                "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50
                },
                "secondName": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50
                },
                "roles": {
                    "type": "array",
                    "uniqueItems": true,
                    "minProperties": 1,
                    "maxProperties": 2,
                    "items": {
                        "type": "string",
                        "enum": ["guest", "user", "admin"]
                    }
                },
                "email": {
                    "type": "string",
                    "pattern": "^[0-9a-z]+\\@crud\\.com$"
                },
                "birthday": {
                    "type": "string",
                    "format": "date"
                },
                "happyHour": {
                    "type": "string",
                    "format": "time"
                },
                "discount": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "multipleOf": 10,
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 100,
                    "exclusiveMaximum": true
                },
                "registeredAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastVisitedAt": {
                    "type": "string",
                    "format": "timestamp"
                }
            }
        }
    }
}
